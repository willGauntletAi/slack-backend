name: Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set lowercase repository name
        run: |
          echo "REPO_LOWERCASE=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO_LOWERCASE }}
          tags: |
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Setup deployment directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            mkdir -p /home/ec2-user/slack-backend

      - name: Copy docker-compose file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/home/ec2-user/slack-backend"

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: REGISTRY,REPO_LOWERCASE
          script: |
            cd /home/ec2-user/slack-backend
            
            # Login to GitHub Container Registry
            sudo docker login ${{ env.REGISTRY }} -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            
            # Get just the short SHA
            SHA=$(echo "${{ steps.meta.outputs.tags }}" | grep -o 'sha-[a-f0-9]*' | head -n1)
            
            # Deploy with environment variables
            REGISTRY="${{ env.REGISTRY }}" \
            GITHUB_REPOSITORY="${{ env.REPO_LOWERCASE }}" \
            TAG="$SHA" \
            DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            REDIS_URL="${{ secrets.REDIS_URL }}" \
            JWT_SECRET="${{ secrets.JWT_SECRET }}" \
            SLACK_AWS_REGION="${{ secrets.SLACK_AWS_REGION }}" \
            SLACK_AWS_ACCESS_KEY_ID="${{ secrets.SLACK_AWS_ACCESS_KEY_ID }}" \
            SLACK_AWS_SECRET_ACCESS_KEY="${{ secrets.SLACK_AWS_SECRET_ACCESS_KEY }}" \
            SLACK_AWS_S3_BUCKET="${{ secrets.SLACK_AWS_S3_BUCKET }}" \
            OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
            DEFAULT_WORKSPACE_ID="${{ secrets.DEFAULT_WORKSPACE_ID }}" \
            DEFAULT_CHANNEL_ID="${{ secrets.DEFAULT_CHANNEL_ID }}" \
            sudo -E docker-compose --env-file /dev/null pull && \
            sudo -E docker-compose --env-file /dev/null up -d 
